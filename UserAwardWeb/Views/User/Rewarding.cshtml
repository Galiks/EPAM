@using Entity
@using UserAward.BLL.Interface
@using UserAward.Container
@using Ninject


@{
    Layout = null;
}

@{
    IUserLogic userLogic = NinjectCommon.Kernel.Get<IUserLogic>();
    IAwardLogic awardLogic = NinjectCommon.Kernel.Get<IAwardLogic>();
    SelectList awards = new SelectList(awardLogic.GetAwards(), "id_award", "Title");
    if (IsPost)
    {
        try
        {
            string userId = Request["userId"];
            string awardId = Request["awardId"];
            bool isRightOperation = userLogic.Rewarding(userId, awardId);
        }
        catch (Exception e)
        {
            <h1>ERROR! @e.Message</h1>
        }
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Rewarding</title>
</head>
<body>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div>
            <form method="post" class="form-group">
                <p>User's ID</p><input type="number" id="userId" name="userId" />
                <div class="col-md-6">
                    @Html.DropDownList("awardId", awards as SelectList)
                </div>
                <button class="alert-danger">Rewarding</button>
            </form>
            <form action="~/User/Index">
                <button class="bg-primary">Cancel</button>
            </form>
        </div>
    }
    else
    {
        <div>
            <h1>You can't do it</h1>
        </div>
    }
</body>
</html>
