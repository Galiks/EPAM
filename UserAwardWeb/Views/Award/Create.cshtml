@using Entity
@using UserAward.BLL.Interface
@using UserAward.Container
@using Ninject


@{
    Layout = null;
}

@{
    string errorMessage = null;
    IAwardLogic awardLogic = NinjectCommon.Kernel.Get<IAwardLogic>();
    if (IsPost)
    {
        try
        {
            string title = Request["title"];
            string description = Request["description"];
            WebImage photo = WebImage.GetImageFromRequest("image");
            byte[] awardImage = null;
            if (photo != null)
            {
                awardImage = photo.GetBytes();
            }
            bool isRightOperation = awardLogic.AddAward(title, description, awardImage);
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">
            <p>@errorMessage</p>
        </div>
    }
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div>
            <form method="post" class="form-group">
                <p>Title</p><input type="text" id="title" name="title" />
                <p>Description</p><input type="text" id="description" name="description" />
                <p>Image</p><input type="file" id="image" name="image" />
                <button class="alert-danger">Create</button>
            </form>
            <form action="~/Award/Index">
                <button class="bg-primary">Cancel</button>
            </form>
        </div>
    }
    else
    {
        <div>
            <h1>You can't do it</h1>
        </div>
    }
</body>
</html>